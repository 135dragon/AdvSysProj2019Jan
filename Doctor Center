*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package doctoroffice;

import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.layout.GridPane;
import javafx.scene.control.ComboBox;
import javafx.scene.control.ListView;
import javafx.scene.control.TextField;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.VBox;

/**
 *
 * @author Charles Hulett
 */
public class DoctorCenter
{
    final private ListView<String> doctorSelectView;
    private VBox center;
    private BorderPane pane = new BorderPane();
    private GridPane grid = new GridPane();
    private GridPane grid2 = new GridPane();
    private ComboBox specialtiesList;
    private Button filter = new Button("Filter");
    private Button unFilter = new Button("Un-Filter");
    private Button select = new Button("Select");
    private Button add = new Button("Add Doctor");
    private String temp = " ";
    private TextField tffName = new TextField();
    private TextField tflName = new TextField();
    private DoctorListFilter filterDoc = new DoctorListFilter();
    private Statement stmt;
    private AddDoctor addDoc;
    private ShowDoctorContents showDocContent = new ShowDoctorContents();
    
    public DoctorCenter(ListView doctorSelectView, VBox center, Statement stmt)
    {
        this.doctorSelectView = doctorSelectView;
        this.center = center;
        this.stmt = stmt;
    }
    
    public void setDocCenter()
    {
        addDoc = new AddDoctor(tffName, tflName, center, specialtiesList);
        add.setOnAction(e -> addDoc.docAdd());
        
        grid2.setPadding(new Insets(0, 15, 15, 15));
        grid2.setHgap(10);
        grid2.setVgap(10);

        center.getChildren().clear();
        center.setPadding(new Insets(15, 12, 15, 12));
        center.setAlignment(Pos.TOP_LEFT);
        center.setSpacing(5);

        grid.add(new Label("                                                        "), 0, 0);
        grid.add(new Label("ID"), 1, 0);
        grid.add(new Label("    "), 2, 0);
        grid.add(new Label("Name"), 3, 0);
        grid.add(new Label("                    "), 4, 0);
        grid.add(new Label("Speciality"), 5, 0);

        grid2.add(new Label("Select Speciality"), 0, 0);
        grid2.add(specialtiesList, 0, 1);
        grid2.add(filter, 0, 2);
        grid2.add(unFilter, 0, 3);
        grid2.add(select, 0, 4);
        grid2.add(add, 0, 5);

        doctorSelectView.getItems().clear();
        
        try 
        {
            String queryString = "select * from Doctor";

            ResultSet resultSet = stmt.executeQuery(queryString);

            ResultSetMetaData rsMetaData = resultSet.getMetaData();

            // Iterate through the result and print the student names
            while (resultSet.next()) 
            {
                for (int i = 1; i <= rsMetaData.getColumnCount(); i++) {
                    if (rsMetaData.getColumnName(i).equals("ID") || rsMetaData.getColumnName(i).equals("fName") || rsMetaData.getColumnName(i).equals("lName") || rsMetaData.getColumnName(i).equals("Speciality")) {
                        temp += resultSet.getObject(i) + "     ";
                    }
                }
                doctorSelectView.getItems().add(temp);
                temp = "";
            }

        } 
        catch (SQLException ex) {}

        //specialitiesList.getSelectionModel().getSelectedItem().toString())
        filter.setOnAction(e -> filterDoc.filterDocList());
        unFilter.setOnAction(new EventHandler<ActionEvent>() 
        {

            @Override
            public void handle(ActionEvent event) 
            {
                doctorSelectView.getItems().clear();
                try 
                {
                    String temp1 = "";
                    String queryString = "select * from Doctor";

                    ResultSet resultSet = stmt.executeQuery(queryString);

                    ResultSetMetaData rsMetaData = resultSet.getMetaData();

                    // Iterate through the result and print the student names
                    while (resultSet.next()) 
                    {
                        for (int i = 1; i <= rsMetaData.getColumnCount(); i++) {
                            if (rsMetaData.getColumnName(i).equals("ID") || rsMetaData.getColumnName(i).equals("fName") || rsMetaData.getColumnName(i).equals("lName") || rsMetaData.getColumnName(i).equals("Speciality")) {
                                temp1 += resultSet.getObject(i) + "     ";
                            }
                        }
                        doctorSelectView.getItems().add(temp1);
                        temp1 = "";
                    }

                } 
                catch (SQLException ex) 
                {}
            }
        });
        select.setOnAction((e -> showDocContent.showDocContents(Double.parseDouble(doctorSelectView.getSelectionModel().getSelectedItem().substring(0, 3)))));

        pane.setTop(grid);
        pane.setLeft(grid2);
        pane.setCenter(doctorSelectView);

        
        center.getChildren().add(pane);
    }
}
